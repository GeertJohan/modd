# An example modd.conf file

# On the command-line, commands are interpreted in the user's shell if we can
# determine it. Here, commands are always interpreted in /bin/sh.

# Patterns are separated by spaces. Patterns that begin with ! are "not"
# patterns - i.e. exclusion filters.
src/**.png src/**.jpg !**/foo.jpg {
    # A basic once-only command
    prep: ./render foo bar
    # A daemon command
    daemon: devd ./rendered
}

# The marker |MODD| is replaced with an escaped list of files that have been
# added or changed (not deleted). When modd is first started, the |MODD| marker
# is replaced with a list of all possible matching files.
src/**.js {
    prep: jshint |MODD|
}

# Patterns may be enclosed in quotes. Not specifiers for quoted strings go
# outside the quotes.
"src/foo bar.png" !"/foo/bar voing" {
    # And so may commands. Newlines are removed before execution, so escaping
    # line endings is not needed.
    prep: "
        cp
            --foo
            --bar
            src dst
    "
    daemon: "
        devd
            --foobar
            --voing
            foo
    "
    # Here, the quote marks are included in the command. Quotes are only
    # interpreted if they enclose the command entirely.
    prep: echo "here!"
    # Quotes and backslashes can be escaped within quoted strings
    prep: "echo \"here \\ too!\""
}

# Quotes can be single or double, with the matching escape character escaped
# with a backslash.
"\"foo" '\'bar' {
    prep: echo foo
}


# There's one special file pattern "+common", which specifies that commonly
# excluded files (editor temporary files, VCS directorys, etc.) should not be
# filtered.
git/**.* +common {
    prep: echo foo
}

# Patterns my be split over multiple lines
src/**.js
src/**.css
{
    prep: echo "here!"
}


# The empty pattern is never matched, so daemons never get restarted, and
# commands are run once only at startup
{
    prep: echo "starting up"
    daemon: devd -ol ./rendered
}


# Commands can be followed by options, each starting with a +
foo {
    daemon +sigterm: devd -ol ./rendered
}
